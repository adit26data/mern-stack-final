{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport var focusStateInitializer = function focusStateInitializer(state) {\n  return _extends({}, state, {\n    focus: {\n      cell: null,\n      columnHeader: null,\n      columnHeaderFilter: null,\n      columnGroupHeader: null\n    },\n    tabIndex: {\n      cell: null,\n      columnHeader: null,\n      columnHeaderFilter: null,\n      columnGroupHeader: null\n    }\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport var useGridFocus = function useGridFocus(apiRef, props) {\n  var logger = useGridLogger(apiRef, 'useGridFocus');\n  var lastClickedCell = React.useRef(null);\n  var publishCellFocusOut = React.useCallback(function (cell, event) {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  var setCellFocus = React.useCallback(function (id, field) {\n    var focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(function (state) {\n      logger.debug(\"Focusing on cell with id=\".concat(id, \" and field=\").concat(field));\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: id,\n            field: field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id: id,\n            field: field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  var setColumnHeaderFocus = React.useCallback(function (field) {\n    var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(function (state) {\n      logger.debug(\"Focusing on column header with colIndex=\".concat(field));\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field: field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field: field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  var setColumnHeaderFilterFocus = React.useCallback(function (field) {\n    var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(function (state) {\n      logger.debug(\"Focusing on column header filter with colIndex=\".concat(field));\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field: field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field: field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  var setColumnGroupHeaderFocus = React.useCallback(function (field, depth) {\n    var event = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field: field,\n            depth: depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field: field,\n            depth: depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  var getColumnGroupHeaderFocus = React.useCallback(function () {\n    return unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n  }, [apiRef]);\n  var moveFocusToRelativeCell = React.useCallback(function (id, field, direction) {\n    var columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    var visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    var currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    var pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    var currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    var rowIndexToFocus = currentPageRows.findIndex(function (row) {\n      return row.id === id;\n    });\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    var rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    var colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    var columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  var handleCellDoubleClick = React.useCallback(function (_ref) {\n    var id = _ref.id,\n      field = _ref.field;\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  var handleCellKeyDown = React.useCallback(function (params, event) {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  var handleColumnHeaderFocus = React.useCallback(function (_ref2, event) {\n    var field = _ref2.field;\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  var focussedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n  var handleColumnGroupHeaderFocus = React.useCallback(function (_ref3, event) {\n    var fields = _ref3.fields,\n      depth = _ref3.depth;\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (focussedColumnGroup !== null && focussedColumnGroup.depth === depth && fields.includes(focussedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef, focussedColumnGroup]);\n  var handleBlur = React.useCallback(function () {\n    logger.debug(\"Clearing focus\");\n    apiRef.current.setState(function (state) {\n      return _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n  }, [logger, apiRef]);\n  var handleCellMouseDown = React.useCallback(function (params) {\n    lastClickedCell.current = params;\n  }, []);\n  var handleDocumentClick = React.useCallback(function (event) {\n    var cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    var focusedCell = gridFocusCellSelector(apiRef);\n    var canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event: event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    var cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(function (state) {\n        return _extends({}, state, {\n          focus: {\n            cell: null,\n            columnHeader: null,\n            columnHeaderFilter: null,\n            columnGroupHeader: null\n          }\n        });\n      });\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  var handleCellModeChange = React.useCallback(function (params) {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    var cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  var handleRowSet = React.useCallback(function () {\n    var cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(function (state) {\n        return _extends({}, state, {\n          focus: {\n            cell: null,\n            columnHeader: null,\n            columnHeaderFilter: null,\n            columnGroupHeader: null\n          }\n        });\n      });\n    }\n  }, [apiRef]);\n  var focusApi = {\n    setCellFocus: setCellFocus,\n    setColumnHeaderFocus: setColumnHeaderFocus,\n    setColumnHeaderFilterFocus: setColumnHeaderFilterFocus\n  };\n  var focusPrivateApi = {\n    moveFocusToRelativeCell: moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus: setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus: getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(function () {\n    var doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return function () {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'headerFilterBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};","map":{"version":3,"names":["_extends","React","unstable_ownerDocument","ownerDocument","useGridApiMethod","useGridLogger","useGridApiEventHandler","isNavigationKey","gridFocusCellSelector","unstable_gridFocusColumnGroupHeaderSelector","gridVisibleColumnDefinitionsSelector","getVisibleRows","clamp","gridPinnedRowsSelector","focusStateInitializer","state","focus","cell","columnHeader","columnHeaderFilter","columnGroupHeader","tabIndex","useGridFocus","apiRef","props","logger","lastClickedCell","useRef","publishCellFocusOut","useCallback","event","current","getRow","id","publishEvent","getCellParams","field","setCellFocus","focusedCell","setState","debug","concat","forceUpdate","setColumnHeaderFocus","arguments","length","undefined","setColumnHeaderFilterFocus","setColumnGroupHeaderFocus","depth","getColumnGroupHeaderFocus","moveFocusToRelativeCell","direction","columnIndexToFocus","getColumnIndex","visibleColumns","currentPage","pagination","paginationMode","pinnedRows","currentPageRows","top","rows","bottom","rowIndexToFocus","findIndex","row","rowToFocus","colSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","rightVisibleCellIndex","columnToFocus","handleCellDoubleClick","_ref","handleCellKeyDown","params","key","handleColumnHeaderFocus","_ref2","target","currentTarget","focussedColumnGroup","handleColumnGroupHeaderFocus","_ref3","fields","includes","handleBlur","handleCellMouseDown","handleDocumentClick","cellParams","canUpdateFocus","unstable_applyPipeProcessors","cellElement","getCellElement","contains","handleCellModeChange","cellMode","handleRowSet","focusApi","focusPrivateApi","useEffect","doc","rootElementRef","addEventListener","removeEventListener"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils/useGridLogger';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { isNavigationKey } from '../../../utils/keyboardUtils';\nimport { gridFocusCellSelector, unstable_gridFocusColumnGroupHeaderSelector } from './gridFocusStateSelector';\nimport { gridVisibleColumnDefinitionsSelector } from '../columns/gridColumnsSelector';\nimport { getVisibleRows } from '../../utils/useGridVisibleRows';\nimport { clamp } from '../../../utils/utils';\nimport { gridPinnedRowsSelector } from '../rows/gridRowsSelector';\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if ((focusedCell == null ? void 0 : focusedCell.id) === id && (focusedCell == null ? void 0 : focusedCell.field) === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => unstable_gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const focussedColumnGroup = unstable_gridFocusColumnGroupHeaderSelector(apiRef);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    if (focussedColumnGroup !== null && focussedColumnGroup.depth === depth && fields.includes(focussedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef, focussedColumnGroup]);\n  const handleBlur = React.useCallback(() => {\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if ((cellParams == null ? void 0 : cellParams.id) === focusedCell.id && (cellParams == null ? void 0 : cellParams.field) === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement != null && cellElement.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if ((cell == null ? void 0 : cell.id) !== params.id || (cell == null ? void 0 : cell.field) !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore, then remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef]);\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'headerFilterBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}