{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nvar cacheContainer = {\n  cache: new WeakMap()\n};\nvar missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport var createSelector = function createSelector() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  var selector = function selector() {\n    var _cache$get, _cache$get3;\n    for (var _len2 = arguments.length, selectorArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      selectorArgs[_key2] = arguments[_key2];\n    }\n    var stateOrApiRef = selectorArgs[0],\n      instanceId = selectorArgs[1];\n    var isApiRef = !!stateOrApiRef.current;\n    var cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : {\n      id: 'default'\n    };\n    var state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    var cache = cacheContainer.cache;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    var newSelector = reselectCreateSelector.apply(void 0, args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null ? void 0 : _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport var unstable_resetCreateSelectorCache = function unstable_resetCreateSelectorCache() {\n  cacheContainer.cache = new WeakMap();\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","buildWarning","cacheContainer","cache","WeakMap","missingInstanceIdWarning","_len","arguments","length","args","Array","_key","selector","_cache$get","_cache$get3","_len2","selectorArgs","_key2","stateOrApiRef","instanceId","isApiRef","current","cacheKey","id","state","process","env","NODE_ENV","get","_cache$get2","newSelector","apply","set","Map","acceptsApiRef","unstable_resetCreateSelectorCache"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cacheContainer = {\n  cache: new WeakMap()\n};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  const selector = (...selectorArgs) => {\n    var _cache$get, _cache$get3;\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : {\n      id: 'default'\n    };\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n    const {\n      cache\n    } = cacheContainer;\n    if (cache.get(cacheKey) && (_cache$get = cache.get(cacheKey)) != null && _cache$get.get(args)) {\n      var _cache$get2;\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return (_cache$get2 = cache.get(cacheKey)) == null ? void 0 : _cache$get2.get(args)(state, cacheKey);\n    }\n    const newSelector = reselectCreateSelector(...args);\n    if (!cache.get(cacheKey)) {\n      cache.set(cacheKey, new Map());\n    }\n    (_cache$get3 = cache.get(cacheKey)) == null ? void 0 : _cache$get3.set(args, newSelector);\n    return newSelector(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCreateSelectorCache = () => {\n  cacheContainer.cache = new WeakMap();\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}