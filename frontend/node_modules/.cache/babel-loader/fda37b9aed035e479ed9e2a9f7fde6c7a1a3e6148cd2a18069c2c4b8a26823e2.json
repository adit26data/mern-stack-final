{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_REQUEST, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nexport const getProduct = keyword => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/products\");\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//to clear all errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_REQUEST","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","getProduct","keyword","dispatch","type","data","get","payload","error","response","message","getProductDetails","id","product","clearErrors"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/src/actions/productAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_REQUEST, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\r\n\r\n\r\nexport const getProduct = (keyword) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCT_REQUEST });\r\n\r\n        const { data } = await axios.get(\"/api/v1/products\");\r\n        dispatch({\r\n            type: ALL_PRODUCT_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//to clear all errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,YAAY,EAAEC,uBAAuB,EAAEC,uBAAuB,EAAEC,oBAAoB,QAAQ,+BAA+B;AAGhM,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK,MAAOC,QAAQ,IAAK;EACvD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAoB,CAAC,CAAC;IAEvC,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kBAAkB,CAAC;IACpDH,QAAQ,CAAC;MACLC,IAAI,EAAET,mBAAmB;MACzBY,OAAO,EAAEF;IACb,CAAC,CAAC;EACN,CAAC,CACD,OAAOG,KAAK,EAAE;IACVL,QAAQ,CAAC;MACLC,IAAI,EAAEV,gBAAgB;MACtBa,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;AAID,OAAO,MAAMC,iBAAiB,GAAIC,EAAE,IAAK,MAAOT,QAAQ,IAAK;EACzD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAwB,CAAC,CAAC;IAE3C,MAAM;MAAEO;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,mBAAkBM,EAAG,EAAC,CAAC;IAEzDT,QAAQ,CAAC;MACLC,IAAI,EAAEL,uBAAuB;MAC7BQ,OAAO,EAAEF,IAAI,CAACQ;IAClB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEJ,oBAAoB;MAC1BO,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAM,MAAOX,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAa,CAAC,CAAC;AAEpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}