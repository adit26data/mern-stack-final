{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adit\\\\Desktop\\\\mern-stack-final\\\\frontend\\\\src\\\\component\\\\User\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./ResetPassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport Metadata from \"../layout/Metadata\";\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = _ref => {\n  _s();\n  let {\n    history,\n    match\n  } = _ref;\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    error,\n    success,\n    loading\n  } = useSelector(state => state.forgotPassword);\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const resetPasswordSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"password\", password);\n    myForm.set(\"confirmPassword\", confirmPassword);\n    dispatch(resetPassword(match.params.token, myForm));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (success) {\n      alert.success(\"Password Updated Successfully\");\n      history.push(\"/login\");\n    }\n  }, [dispatch, error, alert, history, success]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Metadata, {\n        title: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetPasswordContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resetPasswordBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"resetPasswordHeading\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"resetPasswordForm\",\n            onSubmit: resetPasswordSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LockOpenIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"New Password\",\n                required: true,\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loginPassword\",\n              children: [/*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                required: true,\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Update\",\n              className: \"resetPasswordBtn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"zQuuBs3W7VNa2po1sA4FWSswj4w=\", false, function () {\n  return [useDispatch, useAlert, useSelector];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","resetPassword","useAlert","Metadata","LockOpenIcon","LockIcon","jsxDEV","_jsxDEV","ResetPassword","_ref","_s","history","match","dispatch","alert","error","success","loading","state","forgotPassword","password","setPassword","confirmPassword","setConfirmPassword","resetPasswordSubmit","e","preventDefault","myForm","FormData","set","params","token","push","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","onSubmit","type","placeholder","required","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/src/component/User/ResetPassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./ResetPassword.css\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, resetPassword } from \"../../actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Metadata from \"../layout/Metadata\";\r\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\n\r\nconst ResetPassword = ({ history, match }) => {\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { error, success, loading } = useSelector(\r\n        (state) => state.forgotPassword\r\n    );\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n    const resetPasswordSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const myForm = new FormData();\r\n\r\n        myForm.set(\"password\", password);\r\n        myForm.set(\"confirmPassword\", confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, myForm));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success(\"Password Updated Successfully\");\r\n\r\n            history.push(\"/login\");\r\n        }\r\n    }, [dispatch, error, alert, history, success]);\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <Fragment>\r\n                    <Metadata title=\"Change Password\" />\r\n                    <div className=\"resetPasswordContainer\">\r\n                        <div className=\"resetPasswordBox\">\r\n                            <h2 className=\"resetPasswordHeading\">Update Profile</h2>\r\n\r\n                            <form\r\n                                className=\"resetPasswordForm\"\r\n                                onSubmit={resetPasswordSubmit}\r\n                            >\r\n                                <div>\r\n                                    <LockOpenIcon />\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        placeholder=\"New Password\"\r\n                                        required\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"loginPassword\">\r\n                                    <LockIcon />\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        required\r\n                                        value={confirmPassword}\r\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value=\"Update\"\r\n                                    className=\"resetPasswordBtn\"\r\n                                />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}