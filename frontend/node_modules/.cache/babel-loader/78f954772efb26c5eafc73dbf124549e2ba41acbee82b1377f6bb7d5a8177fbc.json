{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport var useGridPipeProcessing = function useGridPipeProcessing(apiRef) {\n  var processorsCache = React.useRef({});\n  var runAppliers = React.useCallback(function (groupCache) {\n    if (!groupCache) {\n      return;\n    }\n    Object.values(groupCache.appliers).forEach(function (callback) {\n      callback();\n    });\n  }, []);\n  var registerPipeProcessor = React.useCallback(function (group, id, processor) {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    var groupCache = processorsCache.current[group];\n    var oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return function () {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  var registerPipeApplier = React.useCallback(function (group, id, applier) {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return function () {\n      var _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  var requestPipeProcessorsApplication = React.useCallback(function (group) {\n    var groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  var applyPipeProcessors = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var group = args[0],\n      value = args[1],\n      context = args[2];\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    var preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce(function (acc, preProcessor) {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  var preProcessingPrivateApi = {\n    registerPipeProcessor: registerPipeProcessor,\n    registerPipeApplier: registerPipeApplier,\n    requestPipeProcessorsApplication: requestPipeProcessorsApplication\n  };\n  var preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_toPropertyKey","React","useGridApiMethod","useGridPipeProcessing","apiRef","processorsCache","useRef","runAppliers","useCallback","groupCache","Object","values","appliers","forEach","callback","registerPipeProcessor","group","id","processor","current","processors","Map","oldProcessor","get","set","registerPipeApplier","applier","_appliers","otherAppliers","map","requestPipeProcessorsApplication","applyPipeProcessors","_len","arguments","length","args","Array","_key","value","context","preProcessors","from","reduce","acc","preProcessor","preProcessingPrivateApi","preProcessingPublicApi","unstable_applyPipeProcessors"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const processorsCache = React.useRef({});\n  const runAppliers = React.useCallback(groupCache => {\n    if (!groupCache) {\n      return;\n    }\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    const groupCache = processorsCache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      runAppliers(groupCache);\n    }\n    return () => {\n      processorsCache.current[group].processors.set(id, null);\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!processorsCache.current[group]) {\n      processorsCache.current[group] = {\n        processors: new Map(),\n        appliers: {}\n      };\n    }\n    processorsCache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = processorsCache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      processorsCache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    const groupCache = processorsCache.current[group];\n    runAppliers(groupCache);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!processorsCache.current[group]) {\n      return value;\n    }\n    const preProcessors = Array.from(processorsCache.current[group].processors.values());\n    return preProcessors.reduce((acc, preProcessor) => {\n      if (!preProcessor) {\n        return acc;\n      }\n      return preProcessor(acc, context);\n    }, value);\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}