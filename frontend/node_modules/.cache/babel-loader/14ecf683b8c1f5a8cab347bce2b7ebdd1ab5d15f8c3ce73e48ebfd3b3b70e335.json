{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport var editingStateInitializer = function editingStateInitializer(state) {\n  return _extends({}, state, {\n    editRows: {}\n  });\n};\nexport var useGridEditing = function useGridEditing(apiRef, props) {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  var debounceMap = React.useRef({});\n  var isCellEditableProp = props.isCellEditable;\n  var isCellEditable = React.useCallback(function (params) {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  var maybeDebounce = function maybeDebounce(id, field, debounceMs, callback) {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      var _debounceMap$current$ = _slicedToArray(debounceMap.current[id][field], 1),\n        _timeout = _debounceMap$current$[0];\n      clearTimeout(_timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    var runImmediately = function runImmediately() {\n      var _debounceMap$current$2 = _slicedToArray(debounceMap.current[id][field], 1),\n        timeout = _debounceMap$current$2[0];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    var timeout = setTimeout(function () {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(function () {\n    var debounces = debounceMap.current;\n    return function () {\n      Object.entries(debounces).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n          id = _ref2[0],\n          fields = _ref2[1];\n        Object.keys(fields).forEach(function (field) {\n          var _debounces$id$field = _slicedToArray(debounces[id][field], 1),\n            timeout = _debounces$id$field[0];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  var runPendingEditCellValueMutation = React.useCallback(function (id, field) {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(function (debouncedField) {\n        var _debounceMap$current$3 = _slicedToArray(debounceMap.current[id][debouncedField], 2),\n          runCallback = _debounceMap$current$3[1];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      var _debounceMap$current$4 = _slicedToArray(debounceMap.current[id][field], 2),\n        runCallback = _debounceMap$current$4[1];\n      runCallback();\n    }\n  }, []);\n  var setEditCellValue = React.useCallback(function (params) {\n    var id = params.id,\n      field = params.field,\n      debounceMs = params.debounceMs;\n    return new Promise(function (resolve) {\n      maybeDebounce(id, field, debounceMs, /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var setEditCellValueToCall, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue; // Check if the cell is in edit mode\n              // By the time this callback runs the user may have cancelled the editing\n              if (!(apiRef.current.getCellMode(id, field) === GridCellModes.Edit)) {\n                _context.next = 6;\n                break;\n              }\n              _context.next = 4;\n              return setEditCellValueToCall(params);\n            case 4:\n              result = _context.sent;\n              resolve(result);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      })));\n    });\n  }, [apiRef, props.editMode]);\n  var getRowWithUpdatedValues = React.useCallback(function (id, field) {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  var getEditCellMeta = React.useCallback(function (id, field) {\n    var editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id][field];\n  }, [apiRef]);\n  var editingSharedApi = {\n    isCellEditable: isCellEditable,\n    setEditCellValue: setEditCellValue,\n    getRowWithUpdatedValues: getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  var editingSharedPrivateApi = {\n    runPendingEditCellValueMutation: runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","map":{"version":3,"names":["_extends","React","useGridApiMethod","useGridCellEditing","GridCellModes","GridEditModes","useGridRowEditing","gridEditRowsStateSelector","isAutoGeneratedRow","editingStateInitializer","state","editRows","useGridEditing","apiRef","props","debounceMap","useRef","isCellEditableProp","isCellEditable","useCallback","params","rowNode","colDef","editable","renderEditCell","maybeDebounce","id","field","debounceMs","callback","current","_debounceMap$current$","_slicedToArray","timeout","clearTimeout","runImmediately","_debounceMap$current$2","setTimeout","useEffect","debounces","Object","entries","forEach","_ref","_ref2","fields","keys","_debounces$id$field","runPendingEditCellValueMutation","debouncedField","_debounceMap$current$3","runCallback","_debounceMap$current$4","setEditCellValue","Promise","resolve","_asyncToGenerator","_regeneratorRuntime","mark","_callee","setEditCellValueToCall","result","wrap","_callee$","_context","prev","next","editMode","Row","setRowEditingEditCellValue","setCellEditingEditCellValue","getCellMode","Edit","sent","stop","getRowWithUpdatedValues","Cell","getRowWithUpdatedValuesFromCellEditing","getRowWithUpdatedValuesFromRowEditing","getEditCellMeta","editingState","editingSharedApi","unstable_getEditCellMeta","editingSharedPrivateApi"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridCellEditing } from './useGridCellEditing';\nimport { GridCellModes, GridEditModes } from '../../../models/gridEditRowModel';\nimport { useGridRowEditing } from './useGridRowEditing';\nimport { gridEditRowsStateSelector } from './gridEditingSelectors';\nimport { isAutoGeneratedRow } from '../rows/gridRowsUtils';\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutoGeneratedRow(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id][field];\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}