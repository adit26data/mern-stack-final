{"ast":null,"code":"import _slicedToArray from \"C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport var useGridNativeEventListener = function useGridNativeEventListener(apiRef, ref, eventName, handler, options) {\n  var logger = useGridLogger(apiRef, 'useNativeEventListener');\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    added = _React$useState2[0],\n    setAdded = _React$useState2[1];\n  var handlerRef = React.useRef(handler);\n  var wrapHandler = React.useCallback(function (event) {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(function () {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(function () {\n    var targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(\"Binding native \".concat(eventName, \" event\"));\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      var boundElem = targetElement;\n      setAdded(true);\n      var unsubscribe = function unsubscribe() {\n        logger.debug(\"Clearing native \".concat(eventName, \" event\"));\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};","map":{"version":3,"names":["React","isFunction","useGridLogger","useGridNativeEventListener","apiRef","ref","eventName","handler","options","logger","_React$useState","useState","_React$useState2","_slicedToArray","added","setAdded","handlerRef","useRef","wrapHandler","useCallback","event","current","useEffect","targetElement","debug","concat","addEventListener","boundElem","unsubscribe","removeEventListener","subscribeEvent"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js"],"sourcesContent":["import * as React from 'react';\nimport { isFunction } from '../../utils/utils';\nimport { useGridLogger } from './useGridLogger';\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    let targetElement;\n    if (isFunction(ref)) {\n      targetElement = ref();\n    } else {\n      targetElement = ref && ref.current ? ref.current : null;\n    }\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      const boundElem = targetElement;\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        boundElem.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [ref, wrapHandler, eventName, added, logger, options, apiRef]);\n};"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,MAAM,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEC,OAAO,EAAK;EACtF,IAAMC,MAAM,GAAGP,aAAa,CAACE,MAAM,EAAE,wBAAwB,CAAC;EAC9D,IAAAM,eAAA,GAA0BV,KAAK,CAACW,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAxCI,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EACtB,IAAMI,UAAU,GAAGhB,KAAK,CAACiB,MAAM,CAACV,OAAO,CAAC;EACxC,IAAMW,WAAW,GAAGlB,KAAK,CAACmB,WAAW,CAAC,UAAAC,KAAK,EAAI;IAC7C,OAAOJ,UAAU,CAACK,OAAO,IAAIL,UAAU,CAACK,OAAO,CAACD,KAAK,CAAC;EACxD,CAAC,EAAE,EAAE,CAAC;EACNpB,KAAK,CAACsB,SAAS,CAAC,YAAM;IACpBN,UAAU,CAACK,OAAO,GAAGd,OAAO;EAC9B,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EACbP,KAAK,CAACsB,SAAS,CAAC,YAAM;IACpB,IAAIC,aAAa;IACjB,IAAItB,UAAU,CAACI,GAAG,CAAC,EAAE;MACnBkB,aAAa,GAAGlB,GAAG,CAAC,CAAC;IACvB,CAAC,MAAM;MACLkB,aAAa,GAAGlB,GAAG,IAAIA,GAAG,CAACgB,OAAO,GAAGhB,GAAG,CAACgB,OAAO,GAAG,IAAI;IACzD;IACA,IAAIE,aAAa,IAAIjB,SAAS,IAAI,CAACQ,KAAK,EAAE;MACxCL,MAAM,CAACe,KAAK,mBAAAC,MAAA,CAAmBnB,SAAS,WAAQ,CAAC;MACjDiB,aAAa,CAACG,gBAAgB,CAACpB,SAAS,EAAEY,WAAW,EAAEV,OAAO,CAAC;MAC/D,IAAMmB,SAAS,GAAGJ,aAAa;MAC/BR,QAAQ,CAAC,IAAI,CAAC;MACd,IAAMa,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;QACxBnB,MAAM,CAACe,KAAK,oBAAAC,MAAA,CAAoBnB,SAAS,WAAQ,CAAC;QAClDqB,SAAS,CAACE,mBAAmB,CAACvB,SAAS,EAAEY,WAAW,EAAEV,OAAO,CAAC;MAChE,CAAC;MACDJ,MAAM,CAACiB,OAAO,CAACS,cAAc,CAAC,SAAS,EAAEF,WAAW,CAAC;IACvD;EACF,CAAC,EAAE,CAACvB,GAAG,EAAEa,WAAW,EAAEZ,SAAS,EAAEQ,KAAK,EAAEL,MAAM,EAAED,OAAO,EAAEJ,MAAM,CAAC,CAAC;AACnE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}