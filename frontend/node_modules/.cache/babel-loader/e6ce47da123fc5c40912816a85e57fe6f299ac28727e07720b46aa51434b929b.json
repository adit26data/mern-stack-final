{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adit\\\\Desktop\\\\mern-stack-final\\\\frontend\\\\src\\\\component\\\\Order\\\\MyOrders.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./myOrders.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport Typography from \"@mui/material\";\nimport MetaData from \"../layout/Metadata\";\nimport LaunchIcon from \"@mui/icons-material/Launch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyOrders = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    loading,\n    error,\n    orders\n  } = useSelector(state => state.myOrders);\n  const {\n    user\n  } = useSelector(state => state.user);\n  const columns = [{\n    field: \"id\",\n    headerName: \"Order ID\",\n    minWidth: 300,\n    flex: 1\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    minWidth: 150,\n    flex: 0.5,\n    cellClassName: params => {\n      return params.getValue(params.id, \"status\") === \"Delivered\" ? \"greenColor\" : \"redColor\";\n    }\n  }, {\n    field: \"itemsQty\",\n    headerName: \"Items Qty\",\n    type: \"number\",\n    minWidth: 150,\n    flex: 0.3\n  }, {\n    field: \"amount\",\n    headerName: \"Amount\",\n    type: \"number\",\n    minWidth: 270,\n    flex: 0.5\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 150,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/order/${params.getValue(params.id, \"id\")}`,\n        children: /*#__PURE__*/_jsxDEV(LaunchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  const rows = [];\n  orders && orders.forEach((item, index) => {\n    rows.push({\n      itemsQty: item.orderItems.length,\n      id: item._id,\n      status: item.orderStatus,\n      amount: item.totalPrice\n    });\n  });\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    dispatch(myOrders());\n  }, [dispatch, alert, error]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `${user.name} - Orders`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myOrdersPage\",\n      children: [/*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: rows,\n        columns: columns,\n        pageSize: 10,\n        disableSelectionOnClick: true,\n        className: \"myOrdersTable\",\n        autoHeight: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        id: \"myOrdersHeading\",\n        children: [user.name, \"'s Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(MyOrders, \"ExGMrMw54xlsQf2kCgUTLXJgjGI=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n_c = MyOrders;\nexport default MyOrders;\nvar _c;\n$RefreshReg$(_c, \"MyOrders\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","clearErrors","myOrders","Loader","Link","useAlert","Typography","MetaData","LaunchIcon","jsxDEV","_jsxDEV","MyOrders","_s","dispatch","alert","loading","error","orders","state","user","columns","field","headerName","minWidth","flex","cellClassName","params","getValue","id","type","sortable","renderCell","to","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","forEach","item","index","push","itemsQty","orderItems","length","_id","status","orderStatus","amount","totalPrice","title","name","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/src/component/Order/MyOrders.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./myOrders.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { clearErrors, myOrders } from \"../../actions/orderAction\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAlert } from \"react-alert\";\r\nimport Typography from \"@mui/material\";\r\nimport MetaData from \"../layout/Metadata\";\r\nimport LaunchIcon from \"@mui/icons-material/Launch\";\r\n\r\nconst MyOrders = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, orders } = useSelector((state) => state.myOrders);\r\n    const { user } = useSelector((state) => state.user);\r\n\r\n    const columns = [\r\n        { field: \"id\", headerName: \"Order ID\", minWidth: 300, flex: 1 },\r\n\r\n        {\r\n            field: \"status\",\r\n            headerName: \"Status\",\r\n            minWidth: 150,\r\n            flex: 0.5,\r\n            cellClassName: (params) => {\r\n                return params.getValue(params.id, \"status\") === \"Delivered\"\r\n                    ? \"greenColor\"\r\n                    : \"redColor\";\r\n            },\r\n        },\r\n        {\r\n            field: \"itemsQty\",\r\n            headerName: \"Items Qty\",\r\n            type: \"number\",\r\n            minWidth: 150,\r\n            flex: 0.3,\r\n        },\r\n\r\n        {\r\n            field: \"amount\",\r\n            headerName: \"Amount\",\r\n            type: \"number\",\r\n            minWidth: 270,\r\n            flex: 0.5,\r\n        },\r\n\r\n        {\r\n            field: \"actions\",\r\n            flex: 0.3,\r\n            headerName: \"Actions\",\r\n            minWidth: 150,\r\n            type: \"number\",\r\n            sortable: false,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <Link to={`/order/${params.getValue(params.id, \"id\")}`}>\r\n                        <LaunchIcon />\r\n                    </Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n    const rows = [];\r\n\r\n    orders &&\r\n        orders.forEach((item, index) => {\r\n            rows.push({\r\n                itemsQty: item.orderItems.length,\r\n                id: item._id,\r\n                status: item.orderStatus,\r\n                amount: item.totalPrice,\r\n            });\r\n        });\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        dispatch(myOrders());\r\n    }, [dispatch, alert, error]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`${user.name} - Orders`} />\r\n\r\n            {loading ? (\r\n                <Loader />\r\n            ) : (\r\n                <div className=\"myOrdersPage\">\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={10}\r\n                        disableSelectionOnClick\r\n                        className=\"myOrdersTable\"\r\n                        autoHeight\r\n                    />\r\n\r\n                    <Typography id=\"myOrdersHeading\">{user.name}'s Orders</Typography>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default MyOrders;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAO,gBAAgB;AACvB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,QAAQ,QAAQ,2BAA2B;AACjE,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,QAAQ,MAAM,oBAAoB;AACzC,OAAOC,UAAU,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,KAAK,GAAGT,QAAQ,CAAC,CAAC;EAExB,MAAM;IAAEU,OAAO;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGlB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAAChB,QAAQ,CAAC;EACzE,MAAM;IAAEiB;EAAK,CAAC,GAAGpB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEnD,MAAMC,OAAO,GAAG,CACZ;IAAEC,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,UAAU;IAAEC,QAAQ,EAAE,GAAG;IAAEC,IAAI,EAAE;EAAE,CAAC,EAE/D;IACIH,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE,GAAG;IACTC,aAAa,EAAGC,MAAM,IAAK;MACvB,OAAOA,MAAM,CAACC,QAAQ,CAACD,MAAM,CAACE,EAAE,EAAE,QAAQ,CAAC,KAAK,WAAW,GACrD,YAAY,GACZ,UAAU;IACpB;EACJ,CAAC,EACD;IACIP,KAAK,EAAE,UAAU;IACjBC,UAAU,EAAE,WAAW;IACvBO,IAAI,EAAE,QAAQ;IACdN,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE;EACV,CAAC,EAED;IACIH,KAAK,EAAE,QAAQ;IACfC,UAAU,EAAE,QAAQ;IACpBO,IAAI,EAAE,QAAQ;IACdN,QAAQ,EAAE,GAAG;IACbC,IAAI,EAAE;EACV,CAAC,EAED;IACIH,KAAK,EAAE,SAAS;IAChBG,IAAI,EAAE,GAAG;IACTF,UAAU,EAAE,SAAS;IACrBC,QAAQ,EAAE,GAAG;IACbM,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAGL,MAAM,IAAK;MACpB,oBACIhB,OAAA,CAACN,IAAI;QAAC4B,EAAE,EAAG,UAASN,MAAM,CAACC,QAAQ,CAACD,MAAM,CAACE,EAAE,EAAE,IAAI,CAAE,EAAE;QAAAK,QAAA,eACnDvB,OAAA,CAACF,UAAU;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAEf;EACJ,CAAC,CACJ;EACD,MAAMC,IAAI,GAAG,EAAE;EAEfrB,MAAM,IACFA,MAAM,CAACsB,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5BH,IAAI,CAACI,IAAI,CAAC;MACNC,QAAQ,EAAEH,IAAI,CAACI,UAAU,CAACC,MAAM;MAChCjB,EAAE,EAAEY,IAAI,CAACM,GAAG;MACZC,MAAM,EAAEP,IAAI,CAACQ,WAAW;MACxBC,MAAM,EAAET,IAAI,CAACU;IACjB,CAAC,CAAC;EACN,CAAC,CAAC;EAENrD,SAAS,CAAC,MAAM;IACZ,IAAImB,KAAK,EAAE;MACPF,KAAK,CAACE,KAAK,CAACA,KAAK,CAAC;MAClBH,QAAQ,CAACZ,WAAW,CAAC,CAAC,CAAC;IAC3B;IAEAY,QAAQ,CAACX,QAAQ,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACW,QAAQ,EAAEC,KAAK,EAAEE,KAAK,CAAC,CAAC;EAE5B,oBACIN,OAAA,CAACd,QAAQ;IAAAqC,QAAA,gBACLvB,OAAA,CAACH,QAAQ;MAAC4C,KAAK,EAAG,GAAEhC,IAAI,CAACiC,IAAK;IAAW;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE3CtB,OAAO,gBACJL,OAAA,CAACP,MAAM;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEV3B,OAAA;MAAK2C,SAAS,EAAC,cAAc;MAAApB,QAAA,gBACzBvB,OAAA,CAACZ,QAAQ;QACLwC,IAAI,EAAEA,IAAK;QACXlB,OAAO,EAAEA,OAAQ;QACjBkC,QAAQ,EAAE,EAAG;QACbC,uBAAuB;QACvBF,SAAS,EAAC,eAAe;QACzBG,UAAU;MAAA;QAAAtB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eAEF3B,OAAA,CAACJ,UAAU;QAACsB,EAAE,EAAC,iBAAiB;QAAAK,QAAA,GAAEd,IAAI,CAACiC,IAAI,EAAC,WAAS;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB,CAAC;AAACzB,EAAA,CAjGID,QAAQ;EAAA,QACOX,WAAW,EAEdK,QAAQ,EAEaN,WAAW,EAC7BA,WAAW;AAAA;AAAA0D,EAAA,GAN1B9C,QAAQ;AAmGd,eAAeA,QAAQ;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}