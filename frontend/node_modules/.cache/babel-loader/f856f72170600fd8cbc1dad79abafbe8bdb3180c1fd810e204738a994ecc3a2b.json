{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_REQUEST, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nexport const getProduct = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_PRODUCT_REQUEST\n      });\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`;\n      if (category) {\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\n      }\n      const {\n        data\n      } = await axios.get(link);\n      dispatch({\n        type: ALL_PRODUCT_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCT_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/ api / v1 / product / ${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//to clear all errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_FAIL","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_REQUEST","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","getProduct","keyword","arguments","length","undefined","currentPage","dispatch","type","link","category","price","ratings","data","get","payload","error","response","message","getProductDetails","id","product","clearErrors"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/src/actions/productAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { ALL_PRODUCT_FAIL, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_REQUEST, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\r\n\r\n\r\nexport const getProduct = (keyword = \"\", currentPage = 1) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: ALL_PRODUCT_REQUEST });\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}`;\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&ratings[gte]=${ratings}`;\r\n        }\r\n        const { data } = await axios.get(link);\r\n        dispatch({\r\n            type: ALL_PRODUCT_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        });\r\n    }\r\n};\r\n\r\n\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/ api / v1 / product / ${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//to clear all errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,YAAY,EAAEC,uBAAuB,EAAEC,uBAAuB,EAAEC,oBAAoB,QAAQ,+BAA+B;AAGhM,OAAO,MAAMC,UAAU,GAAG,SAAAA,CAAA;EAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,WAAW,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,OAAK,MAAOI,QAAQ,IAAK;IAC7E,IAAI;MACAA,QAAQ,CAAC;QAAEC,IAAI,EAAEZ;MAAoB,CAAC,CAAC;MACvC,IAAIa,IAAI,GAAI,4BAA2BP,OAAQ,SAAQI,WAAY,EAAC;MACpE,IAAII,QAAQ,EAAE;QACVD,IAAI,GAAI,4BAA2BP,OAAQ,SAAQI,WAAY,eAAcK,KAAK,CAAC,CAAC,CAAE,eAAcA,KAAK,CAAC,CAAC,CAAE,aAAYD,QAAS,iBAAgBE,OAAQ,EAAC;MAC/J;MACA,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACL,IAAI,CAAC;MACtCF,QAAQ,CAAC;QACLC,IAAI,EAAEb,mBAAmB;QACzBoB,OAAO,EAAEF;MACb,CAAC,CAAC;IACN,CAAC,CACD,OAAOG,KAAK,EAAE;MACVT,QAAQ,CAAC;QACLC,IAAI,EAAEd,gBAAgB;QACtBqB,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;MACjC,CAAC,CAAC;IACN;EACJ,CAAC;AAAA;AAID,OAAO,MAAMC,iBAAiB,GAAIC,EAAE,IAAK,MAAOb,QAAQ,IAAK;EACzD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAwB,CAAC,CAAC;IAE3C,MAAM;MAAEe;IAAK,CAAC,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAE,0BAAyBM,EAAG,EAAC,CAAC;IAEhEb,QAAQ,CAAC;MACLC,IAAI,EAAET,uBAAuB;MAC7BgB,OAAO,EAAEF,IAAI,CAACQ;IAClB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZT,QAAQ,CAAC;MACLC,IAAI,EAAER,oBAAoB;MAC1Be,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,WAAW,GAAGA,CAAA,KAAM,MAAOf,QAAQ,IAAK;EACjDA,QAAQ,CAAC;IAAEC,IAAI,EAAEX;EAAa,CAAC,CAAC;AAEpC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}