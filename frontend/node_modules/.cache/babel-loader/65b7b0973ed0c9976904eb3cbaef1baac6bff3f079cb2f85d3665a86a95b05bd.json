{"ast":null,"code":"import _slicedToArray from \"C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: function overridesResolver(props, styles) {\n    return styles.columnHeaderRow;\n  }\n})(function () {\n  return {\n    display: 'flex'\n  };\n});\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport var useGridColumnHeaders = function useGridColumnHeaders(props) {\n  var innerRefProp = props.innerRef,\n    _props$minColumnIndex = props.minColumnIndex,\n    minColumnIndex = _props$minColumnIndex === void 0 ? 0 : _props$minColumnIndex,\n    visibleColumns = props.visibleColumns,\n    sortColumnLookup = props.sortColumnLookup,\n    filterColumnLookup = props.filterColumnLookup,\n    columnPositions = props.columnPositions,\n    columnHeaderTabIndexState = props.columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState = props.columnGroupHeaderTabIndexState,\n    columnHeaderFocus = props.columnHeaderFocus,\n    columnGroupHeaderFocus = props.columnGroupHeaderFocus,\n    densityFactor = props.densityFactor,\n    headerGroupingMaxDepth = props.headerGroupingMaxDepth,\n    columnMenuState = props.columnMenuState,\n    columnVisibility = props.columnVisibility,\n    columnGroupsHeaderStructure = props.columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence = props.hasOtherElementInTabSequence;\n  var theme = useTheme();\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    dragCol = _React$useState2[0],\n    setDragCol = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    resizeCol = _React$useState4[0],\n    setResizeCol = _React$useState4[1];\n  var apiRef = useGridPrivateApiContext();\n  var rootProps = useGridRootProps();\n  var innerRef = React.useRef(null);\n  var handleInnerRef = useForkRef(innerRefProp, innerRef);\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    renderContext = _React$useState6[0],\n    setRenderContext = _React$useState6[1];\n  var prevRenderContext = React.useRef(renderContext);\n  var prevScrollLeft = React.useRef(0);\n  var currentPage = useGridVisibleRows(apiRef, rootProps);\n  var totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  var headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  React.useEffect(function () {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  var getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: function equalityCheck(a, b) {\n      return ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(function (key) {\n        return a[key] === b[key];\n      });\n    }\n  }));\n  var updateInnerPosition = React.useCallback(function (nextRenderContext) {\n    var _getRenderableIndexes = getRenderableIndexes({\n        firstIndex: nextRenderContext.firstRowIndex,\n        lastIndex: nextRenderContext.lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: currentPage.rows.length,\n        buffer: rootProps.rowBuffer\n      }),\n      _getRenderableIndexes2 = _slicedToArray(_getRenderableIndexes, 2),\n      firstRowToRender = _getRenderableIndexes2[0],\n      lastRowToRender = _getRenderableIndexes2[1];\n    var firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender: firstRowToRender,\n      lastRowToRender: lastRowToRender,\n      apiRef: apiRef,\n      visibleRows: currentPage.rows\n    });\n    var direction = theme.direction === 'ltr' ? 1 : -1;\n    var offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = \"translate3d(\".concat(-offset, \"px, 0px, 0px)\");\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(function () {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  var handleScroll = React.useCallback(function (_ref, event) {\n    var left = _ref.left,\n      _ref$renderContext = _ref.renderContext,\n      nextRenderContext = _ref$renderContext === void 0 ? null : _ref$renderContext;\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    var canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(function () {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  var handleColumnResizeStart = React.useCallback(function (params) {\n    return setResizeCol(params.field);\n  }, []);\n  var handleColumnResizeStop = React.useCallback(function () {\n    return setResizeCol('');\n  }, []);\n  var handleColumnReorderStart = React.useCallback(function (params) {\n    return setDragCol(params.field);\n  }, []);\n  var handleColumnReorderStop = React.useCallback(function () {\n    return setDragCol('');\n  }, []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  var getColumnsToRender = function getColumnsToRender(params) {\n    var _ref2 = params || {},\n      _ref2$renderContext = _ref2.renderContext,\n      nextRenderContext = _ref2$renderContext === void 0 ? renderContext : _ref2$renderContext,\n      _ref2$minFirstColumn = _ref2.minFirstColumn,\n      minFirstColumn = _ref2$minFirstColumn === void 0 ? minColumnIndex : _ref2$minFirstColumn,\n      _ref2$maxLastColumn = _ref2.maxLastColumn,\n      maxLastColumn = _ref2$maxLastColumn === void 0 ? visibleColumns.length : _ref2$maxLastColumn;\n    if (!nextRenderContext) {\n      return null;\n    }\n    var _getRenderableIndexes3 = getRenderableIndexes({\n        firstIndex: nextRenderContext.firstRowIndex,\n        lastIndex: nextRenderContext.lastRowIndex,\n        minFirstIndex: 0,\n        maxLastIndex: currentPage.rows.length,\n        buffer: rootProps.rowBuffer\n      }),\n      _getRenderableIndexes4 = _slicedToArray(_getRenderableIndexes3, 2),\n      firstRowToRender = _getRenderableIndexes4[0],\n      lastRowToRender = _getRenderableIndexes4[1];\n    var firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef: apiRef,\n      firstRowToRender: firstRowToRender,\n      lastRowToRender: lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    var lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    var renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns: renderedColumns,\n      firstColumnToRender: firstColumnToRender,\n      lastColumnToRender: lastColumnToRender,\n      minFirstColumn: minFirstColumn,\n      maxLastColumn: maxLastColumn\n    };\n  };\n  var getColumnHeaders = function getColumnHeaders(params) {\n    var other = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    var renderedColumns = columnsToRender.renderedColumns,\n      firstColumnToRender = columnsToRender.firstColumnToRender;\n    var columns = [];\n    for (var i = 0; i < renderedColumns.length; i += 1) {\n      var colDef = renderedColumns[i];\n      var columnIndex = firstColumnToRender + i;\n      var isFirstColumn = columnIndex === 0;\n      var tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      var hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      var open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  var getColumnGroupHeaders = function getColumnGroupHeaders(params) {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    var columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    var firstColumnToRender = columnsToRender.firstColumnToRender,\n      lastColumnToRender = columnsToRender.lastColumnToRender;\n    var columns = [];\n    var headerToRender = [];\n    var _loop = function _loop(depth) {\n      var rowStructure = columnGroupsHeaderStructure[depth];\n      var firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      var firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      var firstGroupIndex = rowStructure.findIndex(function (_ref4) {\n        var groupId = _ref4.groupId,\n          columnFields = _ref4.columnFields;\n        return groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender);\n      });\n      var lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      var lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      var lastGroupIndex = rowStructure.findIndex(function (_ref5) {\n        var groupId = _ref5.groupId,\n          columnFields = _ref5.columnFields;\n        return groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender);\n      });\n      var visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(function (groupStructure) {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(function (field) {\n            return columnVisibility[field] !== false;\n          })\n        });\n      }).filter(function (groupStructure) {\n        return groupStructure.columnFields.length > 0;\n      });\n      var firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      var hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      var leftOverflow = hiddenGroupColumns.reduce(function (acc, field) {\n        var _column$computedWidth;\n        var column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      var columnIndex = firstColumnToRender;\n      var elements = visibleColumnGroupHeader.map(function (_ref6) {\n        var groupId = _ref6.groupId,\n          columnFields = _ref6.columnFields;\n        var hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        var tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        var headerInfo = {\n          groupId: groupId,\n          width: columnFields.reduce(function (acc, field) {\n            return acc + apiRef.current.getColumn(field).computedWidth;\n          }, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus: hasFocus,\n          tabIndex: tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow: leftOverflow,\n        elements: elements\n      });\n    };\n    for (var depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      _loop(depth);\n    }\n    headerToRender.forEach(function (depthInfo, depthIndex) {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: \"\".concat(headerHeight, \"px\"),\n          transform: \"translateX(-\".concat(depthInfo.leftOverflow, \"px)\")\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(function (_ref3, groupIndex) {\n          var groupId = _ref3.groupId,\n            width = _ref3.width,\n            fields = _ref3.fields,\n            colIndex = _ref3.colIndex,\n            hasFocus = _ref3.hasFocus,\n            tabIndex = _ref3.tabIndex;\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  var rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: \"\".concat(headerHeight, \"px\")\n  };\n  return {\n    renderContext: renderContext,\n    getColumnHeaders: getColumnHeaders,\n    getColumnsToRender: getColumnsToRender,\n    getColumnGroupHeaders: getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        style: rootStyle\n      }, other);\n    },\n    getInnerProps: function getInnerProps() {\n      return {\n        ref: handleInnerRef,\n        role: 'rowgroup'\n      };\n    },\n    headerHeight: headerHeight\n  };\n};","map":{"version":3,"names":["_extends","React","ReactDOM","unstable_useForkRef","useForkRef","styled","useTheme","defaultMemoize","useGridPrivateApiContext","useGridRootProps","useGridApiEventHandler","GridColumnHeaderItem","getFirstColumnIndexToRender","getTotalHeaderHeight","useGridVisibleRows","getRenderableIndexes","GridColumnGroupHeader","jsx","_jsx","GridColumnHeaderRow","name","slot","overridesResolver","props","styles","columnHeaderRow","display","isUIEvent","event","target","useGridColumnHeaders","innerRefProp","innerRef","_props$minColumnIndex","minColumnIndex","visibleColumns","sortColumnLookup","filterColumnLookup","columnPositions","columnHeaderTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","densityFactor","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","theme","_React$useState","useState","_React$useState2","_slicedToArray","dragCol","setDragCol","_React$useState3","_React$useState4","resizeCol","setResizeCol","apiRef","rootProps","useRef","handleInnerRef","_React$useState5","_React$useState6","renderContext","setRenderContext","prevRenderContext","prevScrollLeft","currentPage","totalHeaderHeight","columnHeaderHeight","headerHeight","Math","floor","useEffect","current","columnHeadersContainerElementRef","scrollLeft","getFirstColumnIndexToRenderRef","equalityCheck","a","b","every","key","updateInnerPosition","useCallback","nextRenderContext","_getRenderableIndexes","firstIndex","firstRowIndex","lastIndex","lastRowIndex","minFirstIndex","maxLastIndex","rows","length","buffer","rowBuffer","_getRenderableIndexes2","firstRowToRender","lastRowToRender","firstColumnToRender","firstColumnIndex","columnBuffer","visibleRows","direction","offset","style","transform","concat","useLayoutEffect","handleScroll","_ref","left","_ref$renderContext","_prevRenderContext$cu","_prevRenderContext$cu2","lastColumnIndex","canUpdateInnerPosition","flushSync","handleColumnResizeStart","params","field","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","getColumnsToRender","_ref2","_ref2$renderContext","_ref2$minFirstColumn","minFirstColumn","_ref2$maxLastColumn","maxLastColumn","_getRenderableIndexes3","_getRenderableIndexes4","lastColumnToRender","min","renderedColumns","slice","getColumnHeaders","other","arguments","undefined","columnsToRender","columns","i","colDef","columnIndex","isFirstColumn","tabIndex","hasFocus","open","push","columnMenuOpen","filterItemsCounter","isDragging","colIndex","isResizing","role","ownerState","children","getColumnGroupHeaders","headerToRender","_loop","depth","rowStructure","firstColumnFieldToRender","firstGroupToRender","_apiRef$current$unsta","unstable_getColumnGroupPath","firstGroupIndex","findIndex","_ref4","groupId","columnFields","includes","lastColumnFieldToRender","lastGroupToRender","_apiRef$current$unsta2","lastGroupIndex","_ref5","visibleColumnGroupHeader","map","groupStructure","filter","firstVisibleColumnIndex","indexOf","hiddenGroupColumns","leftOverflow","reduce","acc","_column$computedWidth","column","getColumn","computedWidth","elements","_ref6","headerInfo","width","fields","forEach","depthInfo","depthIndex","height","_ref3","groupIndex","isLastColumn","maxDepth","rootStyle","minHeight","maxHeight","lineHeight","getRootProps","getInnerProps","ref"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { styled, useTheme } from '@mui/system';\nimport { defaultMemoize } from 'reselect';\nimport { useGridPrivateApiContext } from '../../utils/useGridPrivateApiContext';\nimport { useGridRootProps } from '../../utils/useGridRootProps';\nimport { useGridApiEventHandler } from '../../utils/useGridApiEventHandler';\nimport { GridColumnHeaderItem } from '../../../components/columnHeaders/GridColumnHeaderItem';\nimport { getFirstColumnIndexToRender, getTotalHeaderHeight } from '../columns/gridColumnsUtils';\nimport { useGridVisibleRows } from '../../utils/useGridVisibleRows';\nimport { getRenderableIndexes } from '../virtualization/useGridVirtualScroller';\nimport { GridColumnGroupHeader } from '../../../components/columnHeaders/GridColumnGroupHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (props, styles) => styles.columnHeaderRow\n})(() => ({\n  display: 'flex'\n}));\nfunction isUIEvent(event) {\n  return !!event.target;\n}\nexport const useGridColumnHeaders = props => {\n  const {\n    innerRef: innerRefProp,\n    minColumnIndex = 0,\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnPositions,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    densityFactor,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const theme = useTheme();\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const innerRef = React.useRef(null);\n  const handleInnerRef = useForkRef(innerRefProp, innerRef);\n  const [renderContext, setRenderContext] = React.useState(null);\n  const prevRenderContext = React.useRef(renderContext);\n  const prevScrollLeft = React.useRef(0);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps.columnHeaderHeight);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  React.useEffect(() => {\n    apiRef.current.columnHeadersContainerElementRef.current.scrollLeft = 0;\n  }, [apiRef]);\n\n  // memoize `getFirstColumnIndexToRender`, since it's called on scroll\n  const getFirstColumnIndexToRenderRef = React.useRef(defaultMemoize(getFirstColumnIndexToRender, {\n    equalityCheck: (a, b) => ['firstColumnIndex', 'minColumnIndex', 'columnBuffer'].every(key => a[key] === b[key])\n  }));\n  const updateInnerPosition = React.useCallback(nextRenderContext => {\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex,\n      columnBuffer: rootProps.columnBuffer,\n      firstRowToRender,\n      lastRowToRender,\n      apiRef,\n      visibleRows: currentPage.rows\n    });\n    const direction = theme.direction === 'ltr' ? 1 : -1;\n    const offset = firstColumnToRender > 0 ? prevScrollLeft.current - direction * columnPositions[firstColumnToRender] : prevScrollLeft.current;\n    innerRef.current.style.transform = `translate3d(${-offset}px, 0px, 0px)`;\n  }, [columnPositions, minColumnIndex, rootProps.columnBuffer, apiRef, currentPage.rows, rootProps.rowBuffer, theme.direction]);\n  React.useLayoutEffect(() => {\n    if (renderContext) {\n      updateInnerPosition(renderContext);\n    }\n  }, [renderContext, updateInnerPosition]);\n  const handleScroll = React.useCallback(({\n    left,\n    renderContext: nextRenderContext = null\n  }, event) => {\n    var _prevRenderContext$cu, _prevRenderContext$cu2;\n    if (!innerRef.current) {\n      return;\n    }\n\n    // Ignore vertical scroll.\n    // Excepts the first event which sets the previous render context.\n    if (prevScrollLeft.current === left && ((_prevRenderContext$cu = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu.firstColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.firstColumnIndex) && ((_prevRenderContext$cu2 = prevRenderContext.current) == null ? void 0 : _prevRenderContext$cu2.lastColumnIndex) === (nextRenderContext == null ? void 0 : nextRenderContext.lastColumnIndex)) {\n      return;\n    }\n    prevScrollLeft.current = left;\n\n    // We can only update the position when we guarantee that the render context has been\n    // rendered. This is achieved using ReactDOM.flushSync or when the context doesn't change.\n    let canUpdateInnerPosition = false;\n    if (nextRenderContext !== prevRenderContext.current || !prevRenderContext.current) {\n      // ReactDOM.flushSync cannot be called on `scroll` events fired inside effects\n      if (isUIEvent(event)) {\n        // To prevent flickering, the inner position can only be updated after the new context has\n        // been rendered. ReactDOM.flushSync ensures that the state changes will happen before\n        // updating the position.\n        ReactDOM.flushSync(() => {\n          setRenderContext(nextRenderContext);\n        });\n        canUpdateInnerPosition = true;\n      } else {\n        setRenderContext(nextRenderContext);\n      }\n      prevRenderContext.current = nextRenderContext;\n    } else {\n      canUpdateInnerPosition = true;\n    }\n\n    // Pass directly the render context to avoid waiting for the next render\n    if (nextRenderContext && canUpdateInnerPosition) {\n      updateInnerPosition(nextRenderContext);\n    }\n  }, [updateInnerPosition]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScroll);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: nextRenderContext = renderContext,\n      minFirstColumn = minColumnIndex,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    if (!nextRenderContext) {\n      return null;\n    }\n    const [firstRowToRender, lastRowToRender] = getRenderableIndexes({\n      firstIndex: nextRenderContext.firstRowIndex,\n      lastIndex: nextRenderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: currentPage.rows.length,\n      buffer: rootProps.rowBuffer\n    });\n    const firstColumnToRender = getFirstColumnIndexToRenderRef.current({\n      firstColumnIndex: nextRenderContext.firstColumnIndex,\n      minColumnIndex: minFirstColumn,\n      columnBuffer: rootProps.columnBuffer,\n      apiRef,\n      firstRowToRender,\n      lastRowToRender,\n      visibleRows: currentPage.rows\n    });\n    const lastColumnToRender = Math.min(nextRenderContext.lastColumnIndex + rootProps.columnBuffer, maxLastColumn);\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender,\n      minFirstColumn,\n      maxLastColumn\n    };\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null) {\n      return null;\n    }\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex\n      }, other), colDef.field));\n    }\n    return /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      children: columns\n    });\n  };\n  const getColumnGroupHeaders = params => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender == null || columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const columns = [];\n    const headerToRender = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      var _apiRef$current$unsta, _apiRef$current$unsta2;\n      const rowStructure = columnGroupsHeaderStructure[depth];\n      const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n      const firstGroupToRender = (_apiRef$current$unsta = apiRef.current.unstable_getColumnGroupPath(firstColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta : null;\n      const firstGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n      const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n      const lastGroupToRender = (_apiRef$current$unsta2 = apiRef.current.unstable_getColumnGroupPath(lastColumnFieldToRender)[depth]) != null ? _apiRef$current$unsta2 : null;\n      const lastGroupIndex = rowStructure.findIndex(({\n        groupId,\n        columnFields\n      }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n      const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n        return _extends({}, groupStructure, {\n          columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n        });\n      }).filter(groupStructure => groupStructure.columnFields.length > 0);\n      const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n      const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n      const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n        var _column$computedWidth;\n        const column = apiRef.current.getColumn(field);\n        return acc + ((_column$computedWidth = column.computedWidth) != null ? _column$computedWidth : 0);\n      }, 0);\n      let columnIndex = firstColumnToRender;\n      const elements = visibleColumnGroupHeader.map(({\n        groupId,\n        columnFields\n      }) => {\n        const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n        const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n        const headerInfo = {\n          groupId,\n          width: columnFields.reduce((acc, field) => acc + apiRef.current.getColumn(field).computedWidth, 0),\n          fields: columnFields,\n          colIndex: columnIndex,\n          hasFocus,\n          tabIndex\n        };\n        columnIndex += columnFields.length;\n        return headerInfo;\n      });\n      headerToRender.push({\n        leftOverflow,\n        elements\n      });\n    }\n    headerToRender.forEach((depthInfo, depthIndex) => {\n      columns.push( /*#__PURE__*/_jsx(GridColumnHeaderRow, {\n        style: {\n          height: `${headerHeight}px`,\n          transform: `translateX(-${depthInfo.leftOverflow}px)`\n        },\n        role: \"row\",\n        \"aria-rowindex\": depthIndex + 1,\n        ownerState: rootProps,\n        children: depthInfo.elements.map(({\n          groupId,\n          width,\n          fields,\n          colIndex,\n          hasFocus,\n          tabIndex\n        }, groupIndex) => {\n          return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n            groupId: groupId,\n            width: width,\n            fields: fields,\n            colIndex: colIndex,\n            depth: depthIndex,\n            isLastColumn: colIndex === visibleColumns.length - fields.length,\n            maxDepth: headerToRender.length,\n            height: headerHeight,\n            hasFocus: hasFocus,\n            tabIndex: tabIndex\n          }, groupIndex);\n        })\n      }, depthIndex));\n    });\n    return columns;\n  };\n  const rootStyle = {\n    minHeight: totalHeaderHeight,\n    maxHeight: totalHeaderHeight,\n    lineHeight: `${headerHeight}px`\n  };\n  return {\n    renderContext,\n    getColumnHeaders,\n    getColumnsToRender,\n    getColumnGroupHeaders,\n    isDragging: !!dragCol,\n    getRootProps: (other = {}) => _extends({\n      style: rootStyle\n    }, other),\n    getInnerProps: () => ({\n      ref: handleInnerRef,\n      role: 'rowgroup'\n    }),\n    headerHeight\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}