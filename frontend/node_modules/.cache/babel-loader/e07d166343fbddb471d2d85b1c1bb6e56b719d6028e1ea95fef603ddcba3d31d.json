{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n        stateId\n      } = controlStateItem,\n      others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","GridSignature","useGridApiMethod","isFunction","useGridStateInitialization","apiRef","props","controlStateMapRef","useRef","rawForceUpdate","useState","registerControlState","useCallback","controlStateItem","stateId","others","current","setState","state","reason","newState","ignoreSetState","updatedControlStateIds","Object","keys","forEach","controlState","oldSubState","stateSelector","instanceId","newSubState","push","hasPropChanged","propModel","undefined","length","Error","map","el","join","publishEvent","model","propOnChange","details","signature","DataGridPro","api","changeEvent","updateControlState","key","previousState","forceUpdate","publicStateApi","privateStateApi"],"sources":["C:/Users/Adit/Desktop/mern-stack-final/frontend/node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"stateId\"];\nimport * as React from 'react';\nimport { GridSignature } from '../utils/useGridApiEventHandler';\nimport { useGridApiMethod } from '../utils';\nimport { isFunction } from '../../utils/utils';\nexport const useGridStateInitialization = (apiRef, props) => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    const {\n        stateId\n      } = controlStateItem,\n      others = _objectWithoutPropertiesLoose(controlStateItem, _excluded);\n    controlStateMapRef.current[stateId] = _extends({}, others, {\n      stateId\n    });\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      if (apiRef.current.publishEvent) {\n        apiRef.current.publishEvent('stateChange', newState);\n      }\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        const details = props.signature === GridSignature.DataGridPro ? {\n          api: apiRef.current,\n          reason\n        } : {\n          reason\n        };\n        controlState.propOnChange(model, details);\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef, props.signature]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}